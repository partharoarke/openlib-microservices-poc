services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: openlib-zookeeper
    environment:
      - ZOO_ENABLE_AUTH=no
      - ALLOW_ANONYMOUS_LOGIN=yes
    env_file:
      - .env  # Common environment file
    ports:
      - "2181:2181"
    networks:
      - openlib-services-network

  kafka:
    image: bitnami/kafka:latest
    container_name: openlib-kafka
    environment:
      - KAFKA_BROKER_ID=1
    env_file:
      - .env  # Common environment file
    ports:
      - "9092:9092"
    networks:
      - openlib-services-network
    depends_on:
      - zookeeper

  postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    container_name: openlib-db
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    env_file:
      - .env  # Common environment file
    ports:
      - "5432:5432"
    networks:
      - openlib-services-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql

      #airflow-scheduler:
      #build: ./airflow
      #container_name: openlib-airflow-scheduler
      #command: ["airflow", "scheduler"]
      #env_file:
      #- .env
      #volumes:
      #- ./airflow/dags:/opt/airflow/dags
      #- ./data/dumps:/data/dumps
      #networks:
      #- openlib-services-network

      #airflow-webserver:
      #build: ./airflow
      #container_name: openlib-airflow-webserver
      #environment:
      #- AIRFLOW_CORE_LOAD_EXAMPLES=false
      #env_file:
      #- .env
      #volumes:
      #- ./airflow/dags:/opt/airflow/dags
      #- ./data/dumps:/data/dumps 
      #networks:
      #- openlib-services-network
      #ports:
      #- "8080:8080"
      #command: ["airflow", "webserver"]
      #depends_on:
      #- airflow-scheduler
      #- kafka
  airflow:
    build: ./airflow
    container_name: openlib-airflow
    hostname: airflow-worker
    environment:
      - PYTHONPATH=/opt/airflow/scripts:/opt/airflow/dags
      - KAFKA_BROKER=kafka:9092
      - AIRFLOW_CORE_LOAD_EXAMPLES=false
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:password@openlib-db:5432/openlib_db
    env_file:
      .env
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./scripts:/scripts
      - ./data/dumps:/data/dumps
    networks:
      - openlib-services-network
    ports:
      - "8080:8080"
    command: ["airflow", "standalone"]
    depends_on:
      - kafka

  # Data ingestion services
  ingestion-service:
    build: ./ingestion-service
    container_name: ingestion-service
    depends_on:
      - postgres
    environment:
      - POSTGRES_HOST="${POSTGRES_HOST}"
      - POSTGRES_DB="${POSTGRES_DB}"
      - POSTGRES_USER="${POSTGRES_USER}"
      - POSTGRES_PASSWORD="${POSTGRES_PASSWORD}"
      - DUMPS_DIR="${DUMPS_DIR}"
    env_file:
      - .env  # Common environment file
    volumes:
      - ./data/dumps:/data/dumps
    networks:
      - openlib-services-network
    profiles:
      - donotstart

  # microservice (author-service)
  author-service:
    build: ./author-service
    container_name: author-service
    ports:
      - "5001:5000"
    environment:
      - KAFKA_BROKER=kafka:9092
    env_file:
      - .env  # Common environment file
    depends_on:
      - kafka
      - postgres
    networks:
      - openlib-services-network

  # microservice (edition-service)
  edition-service:
    build: ./edition-service
    container_name: edition-service
    ports:
      - "5002:5000"
    environment:
      - KAFKA_BROKER=kafka:9092
    env_file:
      - .env  # Common environment file
    depends_on:
      - kafka
      - postgres
    networks:
      - openlib-services-network

  # microservice (work-service)
  work-service:
    build: ./work-service
    container_name: work-service
    ports:
      - "5003:5000"
    environment:
      - KAFKA_BROKER=kafka:9092
    env_file:
      - .env  # Common environment file
    depends_on:
      - kafka
      - postgres
    networks:
      - openlib-services-network

  # microservice (book-service)
  book-service:
    build: ./book-service
    container_name: book-service
    ports:
      - "5005:5000"
    environment:
      - KAFKA_BROKER=kafka:9092
    env_file:
      - .env  # Common environment file
    depends_on:
      - kafka
      - postgres
    networks:
      - openlib-services-network

  # Add additional services: isbn-service, title-service, etc.
volumes:
  postgres_data:

networks:
  openlib-services-network:
    driver: bridge
    name: openlib-services-network

